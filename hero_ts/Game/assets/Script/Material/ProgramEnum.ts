export enum ProgramEnum {
    USAGE_STATIC = cc.renderer.renderEngine.gfx.USAGE_STATIC,
    USAGE_DYNAMIC = cc.renderer.renderEngine.gfx.USAGE_DYNAMIC,
    USAGE_STREAM = cc.renderer.renderEngine.gfx.USAGE_STREAM,

    INDEX_FMT_UINT8 = cc.renderer.renderEngine.gfx.INDEX_FMT_UINT8,
    INDEX_FMT_UINT16 = cc.renderer.renderEngine.gfx.INDEX_FMT_UINT16,
    INDEX_FMT_UINT32 = cc.renderer.renderEngine.gfx.INDEX_FMT_UINT32,

    ATTR_POSITION = cc.renderer.renderEngine.gfx.ATTR_POSITION,
    ATTR_NORMAL = cc.renderer.renderEngine.gfx.ATTR_NORMAL,
    ATTR_TANGENT = cc.renderer.renderEngine.gfx.ATTR_TANGENT,
    ATTR_BITANGENT = cc.renderer.renderEngine.gfx.ATTR_BITANGENT,
    ATTR_WEIGHTS = cc.renderer.renderEngine.gfx.ATTR_WEIGHTS,
    ATTR_JOINTS = cc.renderer.renderEngine.gfx.ATTR_JOINTS,
    ATTR_COLOR = cc.renderer.renderEngine.gfx.ATTR_COLOR,
    ATTR_COLOR0 = cc.renderer.renderEngine.gfx.ATTR_COLOR0,
    ATTR_COLOR1 = cc.renderer.renderEngine.gfx.ATTR_COLOR1,
    ATTR_UV = cc.renderer.renderEngine.gfx.ATTR_UV,
    ATTR_UV0 = cc.renderer.renderEngine.gfx.ATTR_UV0,
    ATTR_UV1 = cc.renderer.renderEngine.gfx.ATTR_UV1,
    ATTR_UV2 = cc.renderer.renderEngine.gfx.ATTR_UV2,
    ATTR_UV3 = cc.renderer.renderEngine.gfx.ATTR_UV3,
    ATTR_UV4 = cc.renderer.renderEngine.gfx.ATTR_UV4,
    ATTR_UV5 = cc.renderer.renderEngine.gfx.ATTR_UV5,
    ATTR_UV6 = cc.renderer.renderEngine.gfx.ATTR_UV6,
    ATTR_UV7 = cc.renderer.renderEngine.gfx.ATTR_UV7,

    ATTR_TYPE_INT8 = cc.renderer.renderEngine.gfx.ATTR_TYPE_INT8,
    ATTR_TYPE_UINT8 = cc.renderer.renderEngine.gfx.ATTR_TYPE_UINT8,
    ATTR_TYPE_INT16 = cc.renderer.renderEngine.gfx.ATTR_TYPE_INT16,
    ATTR_TYPE_UINT16 = cc.renderer.renderEngine.gfx.ATTR_TYPE_UINT16,
    ATTR_TYPE_INT32 = cc.renderer.renderEngine.gfx.ATTR_TYPE_INT32,
    ATTR_TYPE_UINT32 = cc.renderer.renderEngine.gfx.ATTR_TYPE_UINT32,
    ATTR_TYPE_FLOAT32 = cc.renderer.renderEngine.gfx.ATTR_TYPE_FLOAT32,

    FILTER_NEAREST = cc.renderer.renderEngine.gfx.FILTER_NEAREST,
    FILTER_LINEAR = cc.renderer.renderEngine.gfx.FILTER_LINEAR,

    WRAP_REPEAT = cc.renderer.renderEngine.gfx.FILTER_LINEAR,
    WRAP_CLAMP = cc.renderer.renderEngine.gfx.WRAP_CLAMP,
    WRAP_MIRROR = cc.renderer.renderEngine.gfx.WRAP_MIRROR,

    TEXTURE_FMT_RGB_DXT1 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGB_DXT1,
    TEXTURE_FMT_RGBA_DXT1 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGBA_DXT1,
    TEXTURE_FMT_RGBA_DXT3 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGBA_DXT3,
    TEXTURE_FMT_RGBA_DXT5 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGBA_DXT5,
    TEXTURE_FMT_RGB_ETC1 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGB_ETC1,
    TEXTURE_FMT_RGB_PVRTC_2BPPV1 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGB_PVRTC_2BPPV1,
    TEXTURE_FMT_RGBA_PVRTC_2BPPV1 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGBA_PVRTC_2BPPV1,
    TEXTURE_FMT_RGB_PVRTC_4BPPV1 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGB_PVRTC_4BPPV1,
    TEXTURE_FMT_RGBA_PVRTC_4BPPV1 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGBA_PVRTC_4BPPV1,

    TEXTURE_FMT_A8 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_A8,
    TEXTURE_FMT_L8 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_L8,
    TEXTURE_FMT_L8_A8 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_L8_A8,
    TEXTURE_FMT_R5_G6_B5 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_R5_G6_B5,
    TEXTURE_FMT_R5_G5_B5_A1 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_R5_G5_B5_A1,
    TEXTURE_FMT_R4_G4_B4_A4 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_R4_G4_B4_A4,
    TEXTURE_FMT_RGB8 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGB8,
    TEXTURE_FMT_RGBA8 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGBA8,
    TEXTURE_FMT_RGB16F = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGB16F,
    TEXTURE_FMT_RGBA16F = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGBA16F,
    TEXTURE_FMT_RGB32F = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGB32F,
    TEXTURE_FMT_RGBA32F = cc.renderer.renderEngine.gfx.TEXTURE_FMT_RGBA32F,
    TEXTURE_FMT_R32F = cc.renderer.renderEngine.gfx.TEXTURE_FMT_R32F,
    TEXTURE_FMT_111110F = cc.renderer.renderEngine.gfx.TEXTURE_FMT_111110F,
    TEXTURE_FMT_SRGB = cc.renderer.renderEngine.gfx.TEXTURE_FMT_SRGB,
    TEXTURE_FMT_SRGBA = cc.renderer.renderEngine.gfx.TEXTURE_FMT_SRGBA,

    TEXTURE_FMT_D16 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_D16,
    TEXTURE_FMT_D32 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_D32,
    TEXTURE_FMT_D24S8 = cc.renderer.renderEngine.gfx.TEXTURE_FMT_D24S8,

    DS_FUNC_NEVER = cc.renderer.renderEngine.gfx.DS_FUNC_NEVER,
    DS_FUNC_LESS = cc.renderer.renderEngine.gfx.DS_FUNC_LESS,
    DS_FUNC_EQUAL = cc.renderer.renderEngine.gfx.DS_FUNC_EQUAL,
    DS_FUNC_LEQUAL = cc.renderer.renderEngine.gfx.DS_FUNC_LEQUAL,
    DS_FUNC_GREATER = cc.renderer.renderEngine.gfx.DS_FUNC_GREATER,
    DS_FUNC_NOTEQUAL = cc.renderer.renderEngine.gfx.DS_FUNC_NOTEQUAL,
    DS_FUNC_GEQUAL = cc.renderer.renderEngine.gfx.DS_FUNC_GEQUAL,
    DS_FUNC_ALWAYS = cc.renderer.renderEngine.gfx.DS_FUNC_ALWAYS,

    RB_FMT_RGBA4 = cc.renderer.renderEngine.gfx.RB_FMT_RGBA4,
    RB_FMT_RGB5_A1 = cc.renderer.renderEngine.gfx.RB_FMT_RGB5_A1,
    RB_FMT_RGB565 = cc.renderer.renderEngine.gfx.RB_FMT_RGB565,
    RB_FMT_D16 = cc.renderer.renderEngine.gfx.RB_FMT_D16,
    RB_FMT_S8 = cc.renderer.renderEngine.gfx.RB_FMT_S8,
    RB_FMT_D24S8 = cc.renderer.renderEngine.gfx.RB_FMT_D24S8,

    BLEND_FUNC_ADD = cc.renderer.renderEngine.gfx.BLEND_FUNC_ADD,
    BLEND_FUNC_SUBTRACT = cc.renderer.renderEngine.gfx.BLEND_FUNC_SUBTRACT,
    BLEND_FUNC_REVERSE_SUBTRACT = cc.renderer.renderEngine.gfx.BLEND_FUNC_REVERSE_SUBTRACT,

    BLEND_ZERO = cc.renderer.renderEngine.gfx.BLEND_FUNC_ADD,
    BLEND_ONE = cc.renderer.renderEngine.gfx.BLEND_ONE,
    BLEND_SRC_COLOR = cc.renderer.renderEngine.gfx.BLEND_SRC_COLOR,
    BLEND_ONE_MINUS_SRC_COLOR = cc.renderer.renderEngine.gfx.BLEND_ONE_MINUS_SRC_COLOR,
    BLEND_DST_COLOR = cc.renderer.renderEngine.gfx.BLEND_DST_COLOR,
    BLEND_ONE_MINUS_DST_COLOR = cc.renderer.renderEngine.gfx.BLEND_ONE_MINUS_DST_COLOR,
    BLEND_SRC_ALPHA = cc.renderer.renderEngine.gfx.BLEND_SRC_ALPHA,
    BLEND_ONE_MINUS_SRC_ALPHA = cc.renderer.renderEngine.gfx.BLEND_ONE_MINUS_SRC_ALPHA,
    BLEND_DST_ALPHA = cc.renderer.renderEngine.gfx.BLEND_DST_ALPHA,
    BLEND_ONE_MINUS_DST_ALPHA = cc.renderer.renderEngine.gfx.BLEND_ONE_MINUS_DST_ALPHA,
    BLEND_CONSTANT_COLOR = cc.renderer.renderEngine.gfx.BLEND_CONSTANT_COLOR,
    BLEND_ONE_MINUS_CONSTANT_COLOR = cc.renderer.renderEngine.gfx.BLEND_ONE_MINUS_CONSTANT_COLOR,
    BLEND_CONSTANT_ALPHA = cc.renderer.renderEngine.gfx.BLEND_CONSTANT_ALPHA,
    BLEND_ONE_MINUS_CONSTANT_ALPHA = cc.renderer.renderEngine.gfx.BLEND_ONE_MINUS_CONSTANT_ALPHA,
    BLEND_SRC_ALPHA_SATURATE = cc.renderer.renderEngine.gfx.BLEND_SRC_ALPHA_SATURATE,

    STENCIL_OP_KEEP = cc.renderer.renderEngine.gfx.STENCIL_OP_KEEP,
    STENCIL_OP_ZERO = cc.renderer.renderEngine.gfx.STENCIL_OP_ZERO,
    STENCIL_OP_REPLACE = cc.renderer.renderEngine.gfx.STENCIL_OP_REPLACE,
    STENCIL_OP_INCR = cc.renderer.renderEngine.gfx.STENCIL_OP_INCR,
    STENCIL_OP_INCR_WRAP = cc.renderer.renderEngine.gfx.STENCIL_OP_INCR_WRAP,
    STENCIL_OP_DECR = cc.renderer.renderEngine.gfx.STENCIL_OP_DECR,
    STENCIL_OP_DECR_WRAP = cc.renderer.renderEngine.gfx.STENCIL_OP_DECR_WRAP,
    STENCIL_OP_INVERT = cc.renderer.renderEngine.gfx.STENCIL_OP_INVERT,

    CULL_NONE = cc.renderer.renderEngine.gfx.CULL_NONE,
    CULL_FRONT = cc.renderer.renderEngine.gfx.CULL_FRONT,
    CULL_BACK = cc.renderer.renderEngine.gfx.CULL_BACK,
    CULL_FRONT_AND_BACK = cc.renderer.renderEngine.gfx.CULL_FRONT_AND_BACK,

    PT_POINTS = cc.renderer.renderEngine.gfx.PT_POINTS,
    PT_LINES = cc.renderer.renderEngine.gfx.PT_LINES,
    PT_LINE_LOOP = cc.renderer.renderEngine.gfx.PT_LINE_LOOP,
    PT_LINE_STRIP = cc.renderer.renderEngine.gfx.PT_LINE_STRIP,
    PT_TRIANGLES = cc.renderer.renderEngine.gfx.PT_TRIANGLES,
    PT_TRIANGLE_STRIP = cc.renderer.renderEngine.gfx.PT_TRIANGLE_STRIP,
    PT_TRIANGLE_FAN = cc.renderer.renderEngine.gfx.PT_TRIANGLE_FAN,
}

export enum RenderEnum {
    PROJ_PERSPECTIVE = cc.renderer.renderEngine.renderer.PROJ_PERSPECTIVE,
    PROJ_ORTHO = cc.renderer.renderEngine.renderer.PROJ_ORTHO,

    LIGHT_DIRECTIONAL = cc.renderer.renderEngine.renderer.LIGHT_DIRECTIONAL,
    LIGHT_POINT = cc.renderer.renderEngine.renderer.LIGHT_POINT,
    LIGHT_SPOT = cc.renderer.renderEngine.renderer.LIGHT_SPOT,

    SHADOW_NONE = cc.renderer.renderEngine.renderer.SHADOW_NONE,
    SHADOW_HARD = cc.renderer.renderEngine.renderer.SHADOW_HARD,
    SHADOW_SOFT = cc.renderer.renderEngine.renderer.SHADOW_SOFT,

    PARAM_INT = cc.renderer.renderEngine.renderer.PARAM_INT,
    PARAM_INT2 = cc.renderer.renderEngine.renderer.PARAM_INT2,
    PARAM_INT3 = cc.renderer.renderEngine.renderer.PARAM_INT3,
    PARAM_INT4 = cc.renderer.renderEngine.renderer.PARAM_INT4,
    PARAM_FLOAT = cc.renderer.renderEngine.renderer.PARAM_FLOAT,
    PARAM_FLOAT2 = cc.renderer.renderEngine.renderer.PARAM_FLOAT2,
    PARAM_FLOAT3 = cc.renderer.renderEngine.renderer.PARAM_FLOAT3,
    PARAM_FLOAT4 = cc.renderer.renderEngine.renderer.PARAM_FLOAT4,
    PARAM_COLOR3 = cc.renderer.renderEngine.renderer.PARAM_COLOR3,
    PARAM_COLOR4 = cc.renderer.renderEngine.renderer.PARAM_COLOR4,
    PARAM_MAT2 = cc.renderer.renderEngine.renderer.PARAM_MAT2,
    PARAM_MAT3 = cc.renderer.renderEngine.renderer.PARAM_MAT3,
    PARAM_MAT4 = cc.renderer.renderEngine.renderer.PARAM_MAT4,
    PARAM_TEXTURE_2D = cc.renderer.renderEngine.renderer.PARAM_TEXTURE_2D,
    PARAM_TEXTURE_CUBE = cc.renderer.renderEngine.renderer.PARAM_TEXTURE_CUBE,

    CLEAR_COLOR = cc.renderer.renderEngine.renderer.CLEAR_COLOR,
    CLEAR_DEPTH = cc.renderer.renderEngine.renderer.CLEAR_DEPTH,
    CLEAR_STENCIL = cc.renderer.renderEngine.renderer.CLEAR_STENCIL,
}