{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\Script\\Module\\Manager\\GameManager/assets\\Script\\Module\\Manager\\GameManager\\GameGlobalManager.js"],"names":["outModule","local","RandomNameTool","require","gameData","userRole","maxPersonId","component","ONE_SECOND_GAME_MINUTE","TIMER_TIME","pause","minuteUpdate","addMinute","timeUpdate","lastTime","nowTime","Date","getTime","useSeconds","unschedule","schedule","getNewPersonId","init","initAllNameArr","g_JsonDataTool","getTableByName","array","start","stop","module","exports"],"mappings":";;;;;;AAAA;AACA;;;AAGA,IAAIA,YAAY,EAAhB;AACA,IAAIC,QAAQ,EAAZ;AACA,IAAIC,iBAAiBC,QAAQ,gBAAR,CAArB;;AAEA;AACAH,UAAUI,QAAV;AACA;AACAJ,UAAUK,QAAV;AACA;AACAL,UAAUM,WAAV,GAAwB,CAAxB;AACA;AACAL,MAAMM,SAAN;;AAEA;AACA,IAAMC,yBAAyB,EAA/B;AACA;AACA;AACAR,UAAUS,UAAV,GAAuB,CAAvB;AACA;AACAR,MAAMS,KAAN,GAAc,KAAd;;AAEA;;;AAGAT,MAAMU,YAAN,GAAqB,YAAY;AAC7B,QAAIC,YAAYJ,sBAAhB;AACA,QAAIR,UAAUI,QAAV,IAAsBJ,UAAUI,QAAV,CAAmBS,UAA7C,EAAyD;AACrDb,kBAAUI,QAAV,CAAmBS,UAAnB,CAA8BD,SAA9B;AACH;AACJ,CALD;;AAOA;;;;AAIAX,MAAMY,UAAN,GAAmB,YAAY;AAC3B,QAAIC,iBAAJ;AAAA,QAAcC,gBAAd;AACAD,eAAW,IAAIE,IAAJ,GAAWC,OAAX,EAAX;AACA,QAAI,CAAChB,MAAMS,KAAX,EAAiB;AACbT,cAAMU,YAAN;AACH;AACDI,cAAU,IAAIC,IAAJ,GAAWC,OAAX,EAAV;AACA,QAAIC,aAAa,CAACH,UAAUD,QAAX,IAAuB,IAAxC;AACA;AACAI,iBAAaA,aAAa,CAAb,GAAiB,CAAjB,GAAqBA,UAAlC;AACA;AACAjB,UAAMM,SAAN,CAAgBY,UAAhB,CAA2BlB,MAAMY,UAAjC;AACAZ,UAAMM,SAAN,CAAgBa,QAAhB,CAAyBnB,MAAMY,UAA/B,EAA2Cb,UAAUS,UAAV,GAAuBS,UAAlE,EAA8E,CAA9E;AACH,CAbD;;AAeA;AACAlB,UAAUqB,cAAV,GAA2B,YAAY;AACnCrB,cAAUM,WAAV;AACA,WAAON,UAAUM,WAAV,GAAwB,CAA/B;AACH,CAHD;;AAKA;;;;AAIAN,UAAUsB,IAAV,GAAiB,UAACf,SAAD,EAAYH,QAAZ,EAAyB;AACtCH,UAAMM,SAAN,GAAkBA,SAAlB;AACAP,cAAUI,QAAV,GAAqBA,QAArB;AACA;AACAF,mBAAeqB,cAAf,CAA8BC,eAAeC,cAAf,CAA8B,sBAA9B,EAAsDC,KAApF;AACH,CALD;;AAOA;;;AAGA1B,UAAU2B,KAAV,GAAkB,YAAM;AACpB,QAAI1B,MAAMM,SAAV,EAAqB;AACjBN,cAAMM,SAAN,CAAgBa,QAAhB,CAAyBnB,MAAMY,UAA/B,EAA2Cb,UAAUS,UAArD,EAAiE,CAAjE;AACH;AACJ,CAJD;;AAMA;;;AAGAT,UAAU4B,IAAV,GAAiB,YAAM;AACnB3B,UAAMM,SAAN,CAAgBY,UAAhB,CAA2BlB,MAAMY,UAAjC;AACH,CAFD;;AAIA;;;AAGAb,UAAUU,KAAV,GAAkB,YAAM;AACpBT,UAAMS,KAAN,GAAc,IAAd;AACH,CAFD;;AAIAmB,OAAOC,OAAP,GAAiB9B,SAAjB","file":"GameGlobalManager.js","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\Script\\Module\\Manager\\GameManager","sourcesContent":["/*global module, require, cc, client */\r\n/**\r\n * 这个模块下记录了一些全局性的东西，比如当前的时间\r\n */\r\nvar outModule = {};\r\nvar local = {};\r\nvar RandomNameTool = require('RandomNameTool');\r\n\r\n//全局的游戏类\r\noutModule.gameData;\r\n//玩家数据\r\noutModule.userRole;\r\n//已用的最大人物id\r\noutModule.maxPersonId = 1;\r\n//承载定时器的component\r\nlocal.component;\r\n\r\n//标记时间，就是每帧世界运行的分钟数\r\nconst ONE_SECOND_GAME_MINUTE = 10;\r\n//定时器间隔时间\r\n//设定为可变的\r\noutModule.TIMER_TIME = 1;\r\n//是否暂停时间运行\r\nlocal.pause = false;\r\n\r\n/**\r\n * 时间更新函数\r\n */\r\nlocal.minuteUpdate = function () {\r\n    let addMinute = ONE_SECOND_GAME_MINUTE;\r\n    if (outModule.gameData && outModule.gameData.timeUpdate) {\r\n        outModule.gameData.timeUpdate(addMinute);\r\n    }\r\n};\r\n\r\n/**\r\n * 定时器函数\r\n * local.pause作用于此\r\n */\r\nlocal.timeUpdate = function () {\r\n    let lastTime, nowTime;\r\n    lastTime = new Date().getTime();\r\n    if (!local.pause){\r\n        local.minuteUpdate();\r\n    }\r\n    nowTime = new Date().getTime();\r\n    let useSeconds = (nowTime - lastTime) / 1000;\r\n    //保证不超过1\r\n    useSeconds = useSeconds > 1 ? 1 : useSeconds;\r\n    //再次执行定时器\r\n    local.component.unschedule(local.timeUpdate);\r\n    local.component.schedule(local.timeUpdate, outModule.TIMER_TIME - useSeconds, 1);\r\n};\r\n\r\n//获取一个新的人物id\r\noutModule.getNewPersonId = function () {\r\n    outModule.maxPersonId++;\r\n    return outModule.maxPersonId - 1;\r\n};\r\n\r\n/**\r\n * @param component 组件\r\n * @param gameData GameFactory生成的数据\r\n */\r\noutModule.init = (component, gameData) => {\r\n    local.component = component;\r\n    outModule.gameData = gameData;\r\n    //将配置中的名字都设置为不可随机的\r\n    RandomNameTool.initAllNameArr(g_JsonDataTool.getTableByName('_table_person_person').array);\r\n};\r\n\r\n/**\r\n * 开始游戏中的定时器\r\n */\r\noutModule.start = () => {\r\n    if (local.component) {\r\n        local.component.schedule(local.timeUpdate, outModule.TIMER_TIME, 1);\r\n    }\r\n};\r\n\r\n/**\r\n * 停止游戏的定时器\r\n */\r\noutModule.stop = () => {\r\n    local.component.unschedule(local.timeUpdate);\r\n};\r\n\r\n/**\r\n * 暂停游戏\r\n */\r\noutModule.pause = () => {\r\n    local.pause = true;\r\n};\r\n\r\nmodule.exports = outModule;"]}