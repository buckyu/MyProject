{"version":3,"sources":["GameFactory.js"],"names":["outModule","local","DateTool","require","EventName","ForceFactory","CityFactory","PersonFactory","GameSave","buildFunc","game","timeUpdate","addMinutes","newDate","getNewDate","_nowTimeYear","_nowTimeMonth","_nowTimeDay","_nowTimeHour","_nowTimeMinute","isDayChange","hour","g_EventManager","send","TIME_UPDATE_HOUR","day","TIME_UPDATE_DAY","month","TIME_UPDATE_MONTH","getSeason","TIME_UPDATE_SEASON","year","TIME_UPDATE_YEAR","minute","_allCityArr","forEach","oneCityData","dayUpdate","_allPersonArr","onePersonData","console","log","saveGame","g_BattleManager","personDataBuild","_allPersonData","_id","getPersonById","personId","find","getForceById","forceId","_allForceArr","oneForceData","getCityById","cityId","getSaveJsonData","jsonData","getSaveData","maxPersonId","g_GameGlobalManager","forceArr","map","cityArr","personArr","setGameData","saveData","data","createOneBasePerson","undefined","createOneCity","createOneForce","createOneGameBySaveData","createOneGame","g_JsonDataTool","getTableByName","array","oneForce","main_id","_cityArr","oneCityDay","push","concat","_personArr","bind","module","exports"],"mappings":"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","file":"GameFactory.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\Data\\Game","sourcesContent":["/**\r\n * 全局游戏数据工厂\r\n */\r\nvar outModule = {};\r\nvar local = {};\r\nvar DateTool = require(\"DateTool\");\r\nvar EventName = require(\"EventName\");\r\nvar ForceFactory = require(\"ForceFactory\");\r\nvar CityFactory = require(\"CityFactory\");\r\nvar PersonFactory = require(\"PersonFactory\");\r\nvar GameSave = require(\"GameSave\");\r\n\r\n/**\r\n * @param force 为割据数据绑定相应的函数\r\n */\r\nlocal.buildFunc = function (game) {\r\n    //时间更新函数\r\n    game.timeUpdate = function (addMinutes) {\r\n        var newDate = DateTool.getNewDate(game._nowTimeYear, game._nowTimeMonth, game._nowTimeDay, game._nowTimeHour, game._nowTimeMinute, addMinutes);\r\n        var isDayChange = false;\r\n        //这边先判断是否有时间段的变化\r\n        if (game._nowTimeHour !== newDate.hour) {\r\n            g_EventManager.send(EventName.TIME_UPDATE_HOUR);\r\n        }\r\n        if (game._nowTimeDay !== newDate.day) {\r\n            g_EventManager.send(EventName.TIME_UPDATE_DAY);\r\n            isDayChange = true;\r\n        }\r\n        if (game._nowTimeMonth !== newDate.month) {\r\n            g_EventManager.send(EventName.TIME_UPDATE_MONTH);\r\n        }\r\n        if (DateTool.getSeason(game._nowTimeMonth) !== DateTool.getSeason(newDate.month)) {\r\n            g_EventManager.send(EventName.TIME_UPDATE_SEASON);\r\n        }\r\n        if (game._nowTimeYear !== newDate.year) {\r\n            g_EventManager.send(EventName.TIME_UPDATE_YEAR);\r\n        }\r\n\r\n        game._nowTimeYear = newDate.year;\r\n        game._nowTimeMonth = newDate.month;\r\n        game._nowTimeDay = newDate.day;\r\n        game._nowTimeHour = newDate.hour;\r\n        game._nowTimeMinute = newDate.minute;\r\n        //cc.log(DateTool.getTimeStrWithEra(game._nowTimeYear, game._nowTimeMonth, game._nowTimeDay, game._nowTimeHour, game._nowTimeMinute));\r\n        if (isDayChange) {\r\n            //城市有每日更新的函数\r\n            game._allCityArr.forEach(function (oneCityData) {\r\n                oneCityData.dayUpdate();\r\n            });\r\n            //每个人也有有每日更新的函数\r\n            game._allPersonArr.forEach(function (onePersonData) {\r\n                onePersonData.dayUpdate();\r\n            });\r\n            console.log('game save');\r\n            GameSave.saveGame();\r\n        }\r\n        //人物更新函数\r\n        game._allPersonArr.forEach(function (onePersonData) {\r\n            onePersonData.timeUpdate(addMinutes);\r\n        });\r\n        //战斗定时器\r\n        g_BattleManager.timeUpdate(addMinutes);\r\n    };\r\n    //game里面存储的是所有人物的列表，转换成以id为key的对象数据\r\n    game.personDataBuild = function () {\r\n        if (!game._allPersonData) {\r\n            game._allPersonData = {};\r\n        }\r\n        game._allPersonArr.forEach(function (onePersonData) {\r\n            game._allPersonData[onePersonData._id] = onePersonData;\r\n        });\r\n    };\r\n    //根据id查找人物数据\r\n    game.getPersonById = function (personId) {\r\n        return game._allPersonArr.find((onePersonData) => {\r\n            return onePersonData._id === personId;\r\n        });\r\n    };\r\n    //根据id查找势力数据\r\n    game.getForceById = function (forceId) {\r\n        return game._allForceArr.find((oneForceData) => {\r\n            return oneForceData._id === forceId;\r\n        });\r\n    };\r\n    //根据id查找城市数据\r\n    game.getCityById = function (cityId) {\r\n        return game._allCityArr.find((oneCityData) => {\r\n            return oneCityData._id === cityId;\r\n        });\r\n    };\r\n    //获取游戏存储的数据\r\n    game.getSaveJsonData = function () {\r\n        let jsonData = game.getSaveData();\r\n        return jsonData;\r\n    };\r\n    //获取\r\n    game.getSaveData = function () {\r\n        return {\r\n            year: game._nowTimeYear,\r\n            month: game._nowTimeMonth,\r\n            day: game._nowTimeDay,\r\n            hour: game._nowTimeHour,\r\n            minute: game._nowTimeMinute,\r\n            maxPersonId: g_GameGlobalManager.maxPersonId,\r\n            forceArr: game._allForceArr.map(function (oneForceData) {\r\n                return oneForceData.getSaveData();\r\n            }),\r\n            cityArr: game._allCityArr.map(function (oneCityData) {\r\n                return oneCityData.getSaveData()\r\n            }),\r\n            personArr: game._allPersonArr.map(function (onePersonData) {\r\n                return onePersonData.getSaveData();\r\n            }),\r\n        }\r\n    };\r\n    //设置数据\r\n    game.setGameData = function (saveData) {\r\n        //初始化的时候倒置，大的类可能会引用小的类\r\n        //全部人物\r\n        game._allPersonArr = saveData.personArr.map(function (data) {\r\n            return PersonFactory.createOneBasePerson(undefined, data, undefined);\r\n        });\r\n        //全部城市\r\n        game._allCityArr = saveData.cityArr.map(function (data) {\r\n            return CityFactory.createOneCity(undefined, data);\r\n        });\r\n        //全部割据势力\r\n        game._allForceArr = saveData.forceArr.map(function (data) {\r\n            return ForceFactory.createOneForce(undefined, data);\r\n        });\r\n        //根据割据势力初始化城市和npc\r\n        game.personDataBuild();\r\n    };\r\n};\r\n\r\n/**\r\n * @param saveData 存储的数据\r\n */\r\nlocal.createOneGameBySaveData = function (saveData) {\r\n    //这边这个按照一个虚拟的年号来做\r\n    this._nowTimeYear = saveData.year;\r\n    //这边设置可以选择出生年月日\r\n    this._nowTimeMonth = saveData.month;\r\n    this._nowTimeDay = saveData.day;\r\n    this._nowTimeHour = saveData.hour;\r\n    this._nowTimeMinute = saveData.minute;\r\n\r\n    g_GameGlobalManager.maxPersonId = saveData.maxPersonId;\r\n\r\n    local.buildFunc(this);\r\n};\r\n\r\n/**\r\n * 新建一个全局游戏数据\r\n */\r\nlocal.createOneGame = function (month, day) {\r\n    //全部城市\r\n    this._allCityArr = [];\r\n    //全部人物\r\n    this._allPersonArr = [];\r\n    //这边这个按照一个虚拟的年号来做\r\n    this._nowTimeYear = 1;\r\n    //这边设置可以选择出生年月日\r\n    this._nowTimeMonth = month || 6;\r\n    this._nowTimeDay = day || 1;\r\n    this._nowTimeHour = 8;\r\n    this._nowTimeMinute = 0;\r\n\r\n    local.buildFunc(this);\r\n\r\n    //割据势力的列表\r\n    this._allForceArr = g_JsonDataTool.getTableByName('_table_force_force').array.map(function (oneForce) {\r\n        return ForceFactory.createOneForce(oneForce.main_id, undefined);\r\n    });\r\n    //根据割据势力初始化城市和npc\r\n    this._allForceArr.forEach(function (oneForceData) {\r\n        oneForceData._cityArr.forEach(function (oneCityDay) {\r\n            this._allCityArr.push(oneCityDay);\r\n            this._allPersonArr = this._allPersonArr.concat(oneCityDay._personArr);\r\n        }.bind(this));\r\n    }.bind(this));\r\n    this.personDataBuild();\r\n};\r\n\r\n/**\r\n * @param cityId\r\n * @param saveData \r\n */\r\noutModule.createOneGame = (saveData, month, day) => {\r\n    if (saveData) {\r\n        return new local.createOneGameBySaveData(saveData);\r\n    }\r\n    return new local.createOneGame(month, day);\r\n};\r\n\r\nmodule.exports = outModule;"]}