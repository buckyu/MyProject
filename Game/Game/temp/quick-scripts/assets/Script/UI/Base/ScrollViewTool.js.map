{"version":3,"sources":["ScrollViewTool.js"],"names":["outModule","SCROLL_TYPE_HORIZONTAL","SCROLL_TYPE_VERTICAL","SCROLL_TYPE_BOTH","buildScrollView","scrollViewNode","scrollType","tmpNode","buildFunc","dataArr","nodePool","scrollViewComponent","getComponent","cc","ScrollView","contentNode","content","g_LogTool","showLog","horizontal","vertical","childrenCount","showCount","length","newItemNode","size","get","instantiate","addChild","putArr","push","children","forEach","node","put","firstChildNode","childNode","index","active","x","width","y","height","module","exports"],"mappings":"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","file":"ScrollViewTool.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\UI\\Base","sourcesContent":["/*global module, require, cc, client */\r\n/**\r\n * @desc 模块描述\r\n * @author Administrator\r\n */\r\nvar outModule = {};\r\n\r\n//水平\r\noutModule.SCROLL_TYPE_HORIZONTAL = 1;\r\n//垂直\r\noutModule.SCROLL_TYPE_VERTICAL = 2;\r\noutModule.SCROLL_TYPE_BOTH = 3;\r\n\r\n/**\r\n * 构建一个ScrollView\r\n * @param scrollViewNode\r\n * @param scrollType\r\n * @param tmpNode\r\n * @param buildFunc\r\n * @param dataArr 数据数组，会按照数据数量来生成子节点的数量\r\n * @param nodePool 节点池\r\n */\r\noutModule.buildScrollView = (scrollViewNode, scrollType, tmpNode, buildFunc, dataArr, nodePool) => {\r\n    if (!scrollViewNode) {\r\n        return;\r\n    }\r\n    let scrollViewComponent = scrollViewNode.getComponent(cc.ScrollView);\r\n    if (!scrollViewComponent) {\r\n        return;\r\n    }\r\n    if (!tmpNode) {\r\n        return;\r\n    }\r\n    let contentNode = scrollViewComponent.content;\r\n    if (!contentNode) {\r\n        //cc.ScrollView没有绑定对应的显示内容的节点\r\n        g_LogTool.showLog('buildScrollView: contentNode is null');\r\n        return;\r\n    }\r\n    //设定滑动类型\r\n    switch (scrollType) {\r\n        case outModule.SCROLL_TYPE_HORIZONTAL:\r\n            scrollViewComponent.horizontal = true;\r\n            scrollViewComponent.vertical = false;\r\n            break;\r\n        case outModule.SCROLL_TYPE_VERTICAL:\r\n            scrollViewComponent.horizontal = false;\r\n            scrollViewComponent.vertical = true;\r\n            break;\r\n        case outModule.SCROLL_TYPE_BOTH:\r\n            scrollViewComponent.horizontal = true;\r\n            scrollViewComponent.vertical = true;\r\n            break;\r\n    }\r\n    let childrenCount = contentNode.childrenCount;\r\n    let showCount = dataArr.length;\r\n    //补充节点\r\n    while (childrenCount < showCount) {\r\n        let newItemNode;\r\n        if (nodePool.size() > 0) {\r\n            newItemNode = nodePool.get();\r\n        } else {\r\n            newItemNode = cc.instantiate(tmpNode);\r\n        }\r\n        contentNode.addChild(newItemNode);\r\n        childrenCount++;\r\n    }\r\n    //推送多余节点进入节点池\r\n    let putArr = [];\r\n    while (childrenCount > showCount) {\r\n        putArr.push(contentNode.children[childrenCount]);\r\n        childrenCount--;\r\n    }\r\n    putArr.forEach(function (node) {\r\n        nodePool.put(node);\r\n    });\r\n    //更新节点\r\n    let firstChildNode = contentNode.children[0];\r\n    contentNode.children.forEach((childNode, index) => {\r\n        if (index >= showCount) {\r\n            childNode.active = false;\r\n            return;\r\n        }\r\n        childNode.active = true;\r\n        if (scrollType === outModule.SCROLL_TYPE_HORIZONTAL) {\r\n            childNode.x = firstChildNode.x + index * tmpNode.width;\r\n        } else if (scrollType === outModule.SCROLL_TYPE_VERTICAL) {\r\n            childNode.y = firstChildNode.y - index * tmpNode.height;\r\n        }\r\n        if (buildFunc) {\r\n            buildFunc(childNode, dataArr[index]);\r\n        }\r\n    });\r\n    //更新contentNode尺寸\r\n    if (scrollType === outModule.SCROLL_TYPE_HORIZONTAL) {\r\n        contentNode.width = tmpNode.width * showCount;\r\n    } else if (scrollType === outModule.SCROLL_TYPE_VERTICAL) {\r\n        contentNode.height = tmpNode.height * showCount;\r\n    }\r\n};\r\n\r\nmodule.exports = outModule;"]}